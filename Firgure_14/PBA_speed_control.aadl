package PBA_speed_control
public

data Sensor_Data
end Sensor_Data;

data Set_Speed
end Set_Speed;

data Disengage 
end Disengage;

data Command_Data
end Command_Data;

device Speed_Sensor
    features
        sensor_data: out data port Sensor_Data;
        bus_access: requires bus access Standard_Marine_Bus;
    end Speed_Sensor;

device Throttle
    features
        cmd: in data port Command_Data;
        bus_access: requires bus access Standard_Marine_Bus;
    end Throttle;

process Speed_Control
    features
        set_speed: in data port Set_Speed;
        disengage: in event port;
        sensor_data: in data port Sensor_Data;
        command_data: out data port Command_Data;
    end Speed_Control;

device Interface_Unit
    features
        set_speed: out data port Set_Speed;
        disengage: out event port;
        bus_access: requires bus access Standard_Marine_Bus;
    end Interface_Unit;

bus Standard_Marine_Bus
end Standard_Marine_Bus;

memory Stand_Memory
    features
        bus_access: requires bus access Standard_Marine_Bus;
    end Stand_Memory;

processor RT_MHz350
    features
        bus_access: requires bus access Standard_Marine_Bus;
    end RT_MHz350;

system Complete
end Complete;

system implementation Complete.PBA_speed_control
    subcomponents
        speed_sensor: device Speed_Sensor;
        speed_control: process Speed_Control;
        throttle: device Throttle;
        interface_unit: device Interface_Unit;
        Standard_Marine_Bus: bus Standard_Marine_Bus;
        Stand_Memory: memory Stand_Memory;
        RT_MHz350: processor RT_MHz350;

    connections
        speed_sensor_to_control: port speed_sensor.sensor_data -> speed_control.sensor_data;
        control_to_throttle: port speed_control.command_data -> throttle.cmd;

        interface_unit_to_control: port interface_unit.set_speed -> speed_control.set_speed;
        interface_unit_to_control2: port interface_unit.disengage -> speed_control.disengage;

        sensor_to_marine_bus: bus access speed_sensor.bus_access <-> Standard_Marine_Bus;
        throttle_to_marine_bus: bus access throttle.bus_access <-> Standard_Marine_Bus;
        memory_to_marine_bus: bus access Stand_Memory.bus_access <-> Standard_Marine_Bus;
        processor_to_marine_bus: bus access RT_MHz350.bus_access <-> Standard_Marine_Bus;
        interface_to_marine_bus: bus access interface_unit.bus_access <-> Standard_Marine_Bus;
    end Complete.PBA_speed_control;

end PBA_speed_control;
